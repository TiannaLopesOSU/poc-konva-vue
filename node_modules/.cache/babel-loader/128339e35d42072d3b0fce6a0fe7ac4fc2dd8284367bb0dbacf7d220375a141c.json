{"ast":null,"code":"export default {\n  data() {\n    return {\n      mode: \"brush\",\n      isPaint: false,\n      lastPointerPosition: null\n    };\n  },\n  mounted() {\n    const width = window.innerWidth;\n    const height = window.innerHeight - 25;\n\n    // Create Konva Stage and Layer\n    const stage = new Konva.Stage({\n      container: this.$refs.container,\n      width: width,\n      height: height\n    });\n    const layer = new Konva.Layer();\n    stage.add(layer);\n\n    // Create a canvas element and add it to the layer\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = stage.width();\n    canvas.height = stage.height();\n    const image = new Konva.Image({\n      image: canvas,\n      x: 0,\n      y: 0\n    });\n    layer.add(image);\n\n    // Get the 2D context\n    const context = canvas.getContext(\"2d\");\n    context.strokeStyle = \"#df4b26\";\n    context.lineJoin = \"round\";\n    context.lineWidth = 5;\n\n    // Bind events\n    image.on(\"mousedown touchstart\", () => {\n      this.isPaint = true;\n      this.lastPointerPosition = stage.getPointerPosition();\n    });\n    stage.on(\"mouseup touchend\", () => {\n      this.isPaint = false;\n    });\n    stage.on(\"mousemove touchmove\", () => {\n      if (!this.isPaint) {\n        return;\n      }\n      if (this.mode === \"brush\") {\n        context.globalCompositeOperation = \"source-over\";\n      }\n      if (this.mode === \"eraser\") {\n        context.globalCompositeOperation = \"destination-out\";\n      }\n      context.beginPath();\n      const localPos = {\n        x: this.lastPointerPosition.x - image.x(),\n        y: this.lastPointerPosition.y - image.y()\n      };\n      context.moveTo(localPos.x, localPos.y);\n      const pos = stage.getPointerPosition();\n      const localPos2 = {\n        x: pos.x - image.x(),\n        y: pos.y - image.y()\n      };\n      context.lineTo(localPos2.x, localPos2.y);\n      context.closePath();\n      context.stroke();\n      this.lastPointerPosition = pos;\n      layer.batchDraw();\n    });\n  }\n};","map":{"version":3,"names":["data","mode","isPaint","lastPointerPosition","mounted","width","window","innerWidth","height","innerHeight","stage","Konva","Stage","container","$refs","layer","Layer","add","canvas","document","createElement","image","Image","x","y","context","getContext","strokeStyle","lineJoin","lineWidth","on","getPointerPosition","globalCompositeOperation","beginPath","localPos","moveTo","pos","localPos2","lineTo","closePath","stroke","batchDraw"],"sources":["/Users/lopesti/WebTeam/poc-konva-vue/src/components/KonvaDrawing.vue"],"sourcesContent":["<template>\n  <div>\n    <div>\n      Tool:\n      <select v-model=\"mode\">\n        <option value=\"brush\">Brush</option>\n        <option value=\"eraser\">Eraser</option>\n      </select>\n    </div>\n    <div ref=\"container\"></div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      mode: \"brush\",\n      isPaint: false,\n      lastPointerPosition: null,\n    };\n  },\n  mounted() {\n    const width = window.innerWidth;\n    const height = window.innerHeight - 25;\n\n    // Create Konva Stage and Layer\n    const stage = new Konva.Stage({\n      container: this.$refs.container,\n      width: width,\n      height: height,\n    });\n\n    const layer = new Konva.Layer();\n    stage.add(layer);\n\n    // Create a canvas element and add it to the layer\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = stage.width();\n    canvas.height = stage.height();\n\n    const image = new Konva.Image({\n      image: canvas,\n      x: 0,\n      y: 0,\n    });\n    layer.add(image);\n\n    // Get the 2D context\n    const context = canvas.getContext(\"2d\");\n    context.strokeStyle = \"#df4b26\";\n    context.lineJoin = \"round\";\n    context.lineWidth = 5;\n\n    // Bind events\n    image.on(\"mousedown touchstart\", () => {\n      this.isPaint = true;\n      this.lastPointerPosition = stage.getPointerPosition();\n    });\n\n    stage.on(\"mouseup touchend\", () => {\n      this.isPaint = false;\n    });\n\n    stage.on(\"mousemove touchmove\", () => {\n      if (!this.isPaint) {\n        return;\n      }\n\n      if (this.mode === \"brush\") {\n        context.globalCompositeOperation = \"source-over\";\n      }\n      if (this.mode === \"eraser\") {\n        context.globalCompositeOperation = \"destination-out\";\n      }\n      context.beginPath();\n\n      const localPos = {\n        x: this.lastPointerPosition.x - image.x(),\n        y: this.lastPointerPosition.y - image.y(),\n      };\n      context.moveTo(localPos.x, localPos.y);\n      const pos = stage.getPointerPosition();\n      const localPos2 = {\n        x: pos.x - image.x(),\n        y: pos.y - image.y(),\n      };\n      context.lineTo(localPos2.x, localPos2.y);\n      context.closePath();\n      context.stroke();\n\n      this.lastPointerPosition = pos;\n      layer.batchDraw();\n    });\n  },\n};\n</script>\n\n<style>\nbody {\n  margin: 0;\n  padding: 0;\n  overflow: hidden;\n  background-color: #f0f0f0;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}