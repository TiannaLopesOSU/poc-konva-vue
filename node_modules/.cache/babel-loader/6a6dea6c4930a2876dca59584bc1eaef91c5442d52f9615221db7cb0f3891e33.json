{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container mt-5\"\n};\nconst _hoisted_2 = {\n  class: \"row justify-content-center\"\n};\nconst _hoisted_3 = {\n  class: \"col-8\"\n};\nconst _hoisted_4 = {\n  class: \"border p-3\"\n};\nconst _hoisted_5 = {\n  class: \"dropdown\"\n};\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"btn btn-secondary dropdown-toggle\",\n  type: \"button\",\n  id: \"dropdownMenuButton\",\n  \"data-bs-toggle\": \"dropdown\",\n  \"aria-haspopup\": \"true\",\n  \"aria-expanded\": \"false\"\n}, \" Tool: \", -1 /* HOISTED */);\nconst _hoisted_7 = {\n  class: \"dropdown-menu\",\n  \"aria-labelledby\": \"dropdownMenuButton\"\n};\nconst _hoisted_8 = {\n  ref: \"container\",\n  class: \"drawing-area mt-3\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_hoisted_6, _createElementVNode(\"ul\", _hoisted_7, [_createElementVNode(\"li\", null, [_createElementVNode(\"a\", {\n    class: \"dropdown-item\",\n    onClick: _cache[0] || (_cache[0] = $event => $data.mode = 'brush')\n  }, \"Brush\")]), _createElementVNode(\"li\", null, [_createElementVNode(\"a\", {\n    class: \"dropdown-item\",\n    onClick: _cache[1] || (_cache[1] = $event => $data.mode = 'eraser')\n  }, \"Eraser\")])])]), _createElementVNode(\"div\", _hoisted_8, null, 512 /* NEED_PATCH */)])])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","type","id","ref","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","onClick","_cache","$event","$data","mode","_hoisted_8"],"sources":["/Users/lopesti/WebTeam/poc-konva-vue/src/components/KonvaDrawing.vue"],"sourcesContent":["<template>\n  <div class=\"container mt-5\">\n    <div class=\"row justify-content-center\">\n      <div class=\"col-8\">\n        <div class=\"border p-3\">\n          <div class=\"dropdown\">\n            <button\n              class=\"btn btn-secondary dropdown-toggle\"\n              type=\"button\"\n              id=\"dropdownMenuButton\"\n              data-bs-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n            >\n              Tool:\n            </button>\n            <ul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n              <li>\n                <a class=\"dropdown-item\" @click=\"mode = 'brush'\">Brush</a>\n              </li>\n              <li>\n                <a class=\"dropdown-item\" @click=\"mode = 'eraser'\">Eraser</a>\n              </li>\n            </ul>\n          </div>\n          <div ref=\"container\" class=\"drawing-area mt-3\"></div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Konva from \"konva\";\n\nexport default {\n  data() {\n    return {\n      mode: \"brush\",\n      isPaint: false,\n      lastPointerPosition: null,\n    };\n  },\n  mounted() {\n    const width = window.innerWidth;\n    const height = window.innerHeight - 25;\n\n    // Create Konva Stage and Layer\n    const stage = new Konva.Stage({\n      container: this.$refs.container,\n      width: width,\n      height: height,\n    });\n\n    const layer = new Konva.Layer();\n    stage.add(layer);\n\n    // Create a canvas element and add it to the layer\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = stage.width();\n    canvas.height = stage.height();\n\n    const image = new Konva.Image({\n      image: canvas,\n      x: 0,\n      y: 0,\n    });\n    layer.add(image);\n\n    // Get the 2D context\n    const context = canvas.getContext(\"2d\");\n    context.strokeStyle = \"#df4b26\";\n    context.lineJoin = \"round\";\n    context.lineWidth = 5;\n\n    // Bind events\n    image.on(\"mousedown touchstart\", () => {\n      this.isPaint = true;\n      this.lastPointerPosition = stage.getPointerPosition();\n    });\n\n    stage.on(\"mouseup touchend\", () => {\n      this.isPaint = false;\n    });\n\n    stage.on(\"mousemove touchmove\", () => {\n      if (!this.isPaint) {\n        return;\n      }\n\n      if (this.mode === \"brush\") {\n        context.globalCompositeOperation = \"source-over\";\n      }\n      if (this.mode === \"eraser\") {\n        context.globalCompositeOperation = \"destination-out\";\n      }\n      context.beginPath();\n\n      const localPos = {\n        x: this.lastPointerPosition.x - image.x(),\n        y: this.lastPointerPosition.y - image.y(),\n      };\n      context.moveTo(localPos.x, localPos.y);\n      const pos = stage.getPointerPosition();\n      const localPos2 = {\n        x: pos.x - image.x(),\n        y: pos.y - image.y(),\n      };\n      context.lineTo(localPos2.x, localPos2.y);\n      context.closePath();\n      context.stroke();\n\n      this.lastPointerPosition = pos;\n      layer.batchDraw();\n    });\n  },\n};\n</script>\n\n<style scoped></style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAgB;;EACpBA,KAAK,EAAC;AAA4B;;EAChCA,KAAK,EAAC;AAAO;;EACXA,KAAK,EAAC;AAAY;;EAChBA,KAAK,EAAC;AAAU;gCACnBC,mBAAA,CASS;EARPD,KAAK,EAAC,mCAAmC;EACzCE,IAAI,EAAC,QAAQ;EACbC,EAAE,EAAC,oBAAoB;EACvB,gBAAc,EAAC,UAAU;EACzB,eAAa,EAAC,MAAM;EACpB,eAAa,EAAC;GACf,SAED;;EACIH,KAAK,EAAC,eAAe;EAAC,iBAAe,EAAC;;;EASvCI,GAAG,EAAC,WAAW;EAACJ,KAAK,EAAC;;;uBAxBnCK,mBAAA,CA4BM,OA5BNC,UA4BM,GA3BJL,mBAAA,CA0BM,OA1BNM,UA0BM,GAzBJN,mBAAA,CAwBM,OAxBNO,UAwBM,GAvBJP,mBAAA,CAsBM,OAtBNQ,UAsBM,GArBJR,mBAAA,CAmBM,OAnBNS,UAmBM,GAlBJC,UASS,EACTV,mBAAA,CAOK,MAPLW,UAOK,GANHX,mBAAA,CAEK,aADHA,mBAAA,CAA0D;IAAvDD,KAAK,EAAC,eAAe;IAAEa,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,KAAA,CAAAC,IAAI;KAAY,OAAK,E,GAExDhB,mBAAA,CAEK,aADHA,mBAAA,CAA4D;IAAzDD,KAAK,EAAC,eAAe;IAAEa,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,KAAA,CAAAC,IAAI;KAAa,QAAM,E,OAI9DhB,mBAAA,CAAqD,OAArDiB,UAAqD,8B"},"metadata":{},"sourceType":"module","externalDependencies":[]}